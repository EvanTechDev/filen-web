/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SyncsLazyImport = createFileRoute('/syncs')()
const NotesLazyImport = createFileRoute('/notes')()
const LoginLazyImport = createFileRoute('/login')()
const ContactsLazyImport = createFileRoute('/contacts')()
const ChatsLazyImport = createFileRoute('/chats')()
const IndexLazyImport = createFileRoute('/')()
const SettingsTypeLazyImport = createFileRoute('/settings/$type')()
const NotesUuidLazyImport = createFileRoute('/notes/$uuid')()
const DriveSplatLazyImport = createFileRoute('/drive/$')()
const ChatsUuidLazyImport = createFileRoute('/chats/$uuid')()

// Create/Update Routes

const SyncsLazyRoute = SyncsLazyImport.update({
  path: '/syncs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/syncs.lazy').then((d) => d.Route))

const NotesLazyRoute = NotesLazyImport.update({
  path: '/notes',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notes.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ContactsLazyRoute = ContactsLazyImport.update({
  path: '/contacts',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contacts.lazy').then((d) => d.Route))

const ChatsLazyRoute = ChatsLazyImport.update({
  path: '/chats',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/chats.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SettingsTypeLazyRoute = SettingsTypeLazyImport.update({
  path: '/settings/$type',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/settings.$type.lazy').then((d) => d.Route),
)

const NotesUuidLazyRoute = NotesUuidLazyImport.update({
  path: '/$uuid',
  getParentRoute: () => NotesLazyRoute,
} as any).lazy(() => import('./routes/notes.$uuid.lazy').then((d) => d.Route))

const DriveSplatLazyRoute = DriveSplatLazyImport.update({
  path: '/drive/$',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/drive.$.lazy').then((d) => d.Route))

const ChatsUuidLazyRoute = ChatsUuidLazyImport.update({
  path: '/$uuid',
  getParentRoute: () => ChatsLazyRoute,
} as any).lazy(() => import('./routes/chats.$uuid.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/chats': {
      preLoaderRoute: typeof ChatsLazyImport
      parentRoute: typeof rootRoute
    }
    '/contacts': {
      preLoaderRoute: typeof ContactsLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/notes': {
      preLoaderRoute: typeof NotesLazyImport
      parentRoute: typeof rootRoute
    }
    '/syncs': {
      preLoaderRoute: typeof SyncsLazyImport
      parentRoute: typeof rootRoute
    }
    '/chats/$uuid': {
      preLoaderRoute: typeof ChatsUuidLazyImport
      parentRoute: typeof ChatsLazyImport
    }
    '/drive/$': {
      preLoaderRoute: typeof DriveSplatLazyImport
      parentRoute: typeof rootRoute
    }
    '/notes/$uuid': {
      preLoaderRoute: typeof NotesUuidLazyImport
      parentRoute: typeof NotesLazyImport
    }
    '/settings/$type': {
      preLoaderRoute: typeof SettingsTypeLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ChatsLazyRoute.addChildren([ChatsUuidLazyRoute]),
  ContactsLazyRoute,
  LoginLazyRoute,
  NotesLazyRoute.addChildren([NotesUuidLazyRoute]),
  SyncsLazyRoute,
  DriveSplatLazyRoute,
  SettingsTypeLazyRoute,
])

/* prettier-ignore-end */
